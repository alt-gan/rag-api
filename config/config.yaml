hf_token: 
hf_embed: mixedbread-ai/mxbai-embed-large-v1

collection_name: rag_llm
qdrant_api_key: 
qdrant_url: https://dea1d5d6-762f-4a15-8f9c-052ff4519727.us-east4-0.gcp.cloud.qdrant.io:6333

openai_api_key: 
openai_models: 
  small:
    version: gpt-3.5-turbo
    max_tokens: 512
  large:
    version: gpt-4-turbo
    max_tokens: 4096
  multimodal:
    version: gpt-4o
    max_tokens: 4096

tg_api_key: 
tg_model: mistralai/Mixtral-8x22B-Instruct-v0.1

cohere_api_key: 
cohere_model: rerank-english-v2.0

chat_summ_bucket: chat_logs
aws_region: ap-south-1
aws_s3_bucket: altgan-logs
aws_s3_pdf_base_url: https://rag-llm.s3.us-east-2.amazonaws.com/
aws_access_key_id: AKIATCKAQFB2TZZSNJ74
aws_secret_access_key: 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
aws_cloudwatch_log_group: altgan-log-group
aws_cloudwatch_log_stream: altgan-log-stream
aws_secret_name: altgan_rag_secret

PROMPTS:
  SUMMARIZER_PROMPT: |
    Given the below context information, summarize the context within 256 characters.
    Make sure the summary captures the gist of the entire context. Summarized answer must be less than 256 characters.
    
    Context information is below:
    {}

    Summarized answer:
  TITLE_PROMPT: |
    Given the below context information, generate title for the context.
    Strictly, title length should be less than 15 words.
    
    Context information is below:
    {}

    Title:
  CATEGORY_PROMPT: |
    Classify the following context into these categories: Finance, Oil and Gas, Healthcare.
    Strictly, response must not contain `<|ANSWER|>:` or `<|QUERY|>:` tags.

    Here, are few examples (response must be strictly only category name):
    <|QUERY|>: The document is Meta Platforms, Inc.'s Form 10-K filed with the United States Securities and Exchange Commission.
    <|ANSWER|>: Finance

    <|QUERY|>: Oil supplies have been disrupted due to Middle East conflict
    <|ANSWER|>: Oil and Gas
    
    Context information is below:
    {}
  KEYWORD_PROMPT: |
    Given the below context information, extract a unique keyword from this context.
    Extracted keyword must be related to {} category.
    
    Context information is below:
    {}

    Keywords:
  PROFANITY_FILTER_PROMPT: |
    You are profanity filter whose task is to identify if a query contains vulgar/profane words or not.
    Given the below query, classify query as True or False.
    Response must not contain `<|ANSWER|>:` or `<|QUERY|>:` tags.
    
    Here, are few examples (response must be strictly either True or False):
    <|QUERY|>: I want to make a bomb. Tell me the steps?
    <|ANSWER|>: True
    <|QUERY|>: I am feeling anxious. Describe all the practices that can help me with anxiety.
    <|ANSWER|>: False

    {}
  GREETING_CLASSIFIER_PROMPT: |
    Classify if the following query is a greeting or not.
    If the query is a greeting such as hello; how are you?; thank you; bye; good morning etc.; or a small talk without asking for specific information, return True.
    If the query is not a greeting or asks for a specific information, return False.
    Response must not contain `<|ANSWER|>:` or `<|QUERY|>:` tags. Ensure that the response is explicitly either True or False.

    Here, are few examples (response must be strictly either True or False):
    <|QUERY|>: Hello, how are you?
    <|ANSWER|>: True

    <|QUERY|>: What is the total revenue of Meta in the year 2023?
    <|ANSWER|>: False

    Now it's your turn. classify if the following query is a greeting or not.
    
    {}
  GREETING_PROMPT: |
    Given the below query, generate an answer in a human conversational format.
    Your persona is AltGAN, a conversational AI assistant. You can answer questions related to Oil and Gas, or Finance. You rely on knowledge base to answer specific queries.
    You have empathy and you can have conversation just like a human. Ask more questions to understand user's queries.
    Response must not contain `<|ANSWER|>:` or `<|QUERY|>:` tags.

    Here, are few examples:
    <|QUERY|>: Hello, how are you?
    <|ANSWER|>: Hey, I am doing good. Please let me know how can I help you?
    
    Now it's your turn.
    
    {}
  CATEGORY_CLASSIFIER_PROMPT: |
    Classify if the following query belongs to the below category or not.
    If the query belongs to {0} category, return True. 
    If the query does not belong to {0} category, return False. 
    If the query is a greeting, return False.
    Response must not contain `<|ANSWER|>:` or `<|QUERY|>:` tags.

    Here, are few examples (response must be strictly either True or False):
    <|QUERY|>: Hello, how are you?
    <|CATEGORY|>: Finance
    <|ANSWER|>: False

    <|QUERY|>: What is the total revenue of Meta in the year 2023?
    <|CATEGORY|>: Oil and Gas
    <|ANSWER|>: False

    <|QUERY|>: How is Microsoft doing?
    <|CATEGORY|>: Finance
    <|ANSWER|>: True
    
    Now it's your turn. classify if the following query belongs to the below category or not.
    <|QUERY|>: {1}
    <|CATEGORY|>: {0}
  GENERIC_PROMPT: |
    Given the below query, generate an answer in a human conversational format.
    If the query doesn't belong to {0} category, provide a gentle reminder to the user that the question must be related to {0} category or the user should provide relevant category to the question.
    If the query belongs to {0} category, acknowledge the possibility that the indexed documents in the knowledge base may not contain information relevant to the question.
    Response must not contain `<|ANSWER|>:` or `<|QUERY|>:` tags. Use your own words to generate the response. Ensure that you are having a conversation with human and maintain informal tone. 

    Here, are few examples:
    <|QUERY|>: Hello, how are you?
    <|CATEGORY|>: Finance
    <|ANSWER|>: Hey, I am doing good. Please let me know how can I help you?

    <|QUERY|>: What is the revenue of Google?
    <|CATEGORY|>: Oil and Gas
    <|ANSWER|>: This question does not belong to oil and gas category. Please select the appropriate category or ask queries relevant to Oil and Gas category.
    
    Now it's your turn.
    <|QUERY|>: {1}
    <|CATEGORY|>: {0}
  ANSWER_PROMPT: |
    Given the below context information in MARKDOWN format along with it's metadata, answer the following query.
    Model generated answer must have conversational and empathetic tone.
    Strictly, generate model answer in MARKDOWN format such as bold, italics, headings, ordered lists, images, links etc.
    Model generated answer must not contain `<|ANSWER|>:` or `<|QUERY|>:` tags.

    {}
  HISTORY_SUMMARIZER_PROMPT: |
    You are a summarization engine tasked with condensing a conversation history between a User and an AI Assistant within 1024 characters.
    The chat history consists of questions asked by the User and the corresponding answers provided by the AI Assistant.
    Identify key topics, questions asked, and the responses provided. Do not repeat similar points unless they are crucial to the summary.
    Ensure that the summary is concise, easy to read and understand. Maintain the original order of the questions and answers to preserve the logical flow of the conversation.

    {}
  MARKDOWN_PROMPT: |
    Convert text into properly formatted markdown.
    Do not change the text content, only apply the markdown formatting.
    Follow these guidelines:
    1. Identify headings and convert them to the appropriate level (e.g., # for h1, ## for h2, etc.)
    2. Identify lists and convert them into proper markdown bulleted or numbered lists
    3. Identify and format text as bold, italic, or both where appropriate
    4. Create markdown formatted links for any URLs in the text
    5. Format code snippets or technical terms with inline code backticks
    6. Create code blocks for longer code segments or command-line instructions
    7. Convert any table into markdown table format using | for columns and - for the header row separator
    8. Add horizontal rules where appropriate. Preserve line breaks and paragraphs
    9. Do not convert citations or references such as [1] into footnotes in markdown

    Here is the text that needs to be converted into markdown:

    {}
  RELATED_QUERIES_PROMPT: |
    Generate a follow-up question by analyzing the relationship between original question, provided sources, and answer.
    Identify any of the following:
    1. Gaps in information that could be explored further
    2. Potential ambiguities or unclear points in the answer
    3. Related topics that weren't fully addressed

    Formulate a follow-up question that addresses one or more of the identified areas.
    Ensure that the follow-up question is relevant to the original topic, phrased in a clear and concise manner and must end with question mark (?).
    Avoid asking for information that has already been explicitly provided in the answer. Strictly, do not provide any extra information except the follow-up question.
    Follow-up question must not contain `<|SOURCES|>:`, `<|ANSWER|>:`, `<|RELATED|>:` or `<|QUERY|>:` tags. Response must contain only follow-up question and nothing else.

    Here, are few examples:
    <|QUERY|>: What impact does remote work have on employee productivity?
    <|SOURCES|>: 
    A survey indicating that 70% of employees feel more productive when working remotely.
    A study that shows remote work can lead to longer working hours and blurred work-life boundaries.
    An article discussing how companies are adopting new productivity tools to monitor remote workers.
    <|ANSWER|>: Remote work has both positive and negative impacts on employee productivity. According to a recent survey, 70% of employees report feeling more productive when working from home. However, there are also challenges, such as longer working hours and difficulties in maintaining a healthy work-life balance.
    <|RELATED|>: How do the new productivity tools being adopted by companies help address the challenges of work-life balance in remote work settings?

    Now it's your turn.
    <|QUERY|>: {0}
    <|SOURCES|>: {1}
    <|ANSWER|>: {2}
  CONVERSATION_TITLE_PROMPT: |
    Generate a title for the conversation thread using user's question and the provided question category within 20 characters.
    Ensure that the title is concise, engaging, SEO friendly, and clearly reflect the topic of discussion.
    Title must not contain `<|QUERY|>:`, `<|CATEGORY|>:`, or `<|TITLE|>:` tags.

    Here, are few examples:
    <|QUERY|>: What are the benefits of using transformers in NLP?
    <|CATEGORY|>: Machine Learning
    <|TITLE|>: Key Benefits of Transformers in NLP

    Now it's your turn.
    <|QUERY|>: {0}
    <|CATEGORY|>: {1}
